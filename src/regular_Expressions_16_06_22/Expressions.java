package regular_Expressions_16_06_22;

//Регулярные выражения  //Regular Expressions
// это последовательность символов, формирующая шаблон поиска. Когда вы ищете данные в ТЕКСТЕ, вы можете использовать этот шаблон поиска, чтобы описать то, что вы ищете.
//Регулярные выражения можно использовать для выполнения всех типов <текстового поиска> и операций <замены текста> .
//Нужно импортировать java.util.regex пакет для работы с регулярными выражениями.
//     В пакет входят следующие классы:
// Pattern Class — определяет шаблон (для использования в поиске)
// Matcher Class - Используется для поиска шаблона
// PatternSyntaxException Class — указывает на синтаксическую ошибку в шаблоне регулярного выражения.

       //Пример
   //Узнайте, есть ли в предложении слово «w3schools»:
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
public class Expressions {
    public static void main(String[] args) {
        Pattern pattern = Pattern.compile("w3schools", Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher("Visit W3Schools!");
        boolean matchFound = matcher.find();
        if(matchFound){
            System.out.println("Match found");
        }else {
            System.out.println("Match not  found");
        }
    }
}
//Объяснение примера

//В этом примере слово «w3schools» ищется в предложении.
//
//Во-первых, шаблон создается с помощью Pattern.compile()метода.
// Первый параметр указывает, какой шаблон ищется, а второй параметр имеет флаг, указывающий,
// что поиск должен быть нечувствительным к регистру. Второй параметр является необязательным.
//
//Метод matcher()используется для поиска шаблона в строке. Он возвращает объект Matcher, который содержит информацию о выполненном поиске.
//
//Метод find()возвращает true, если шаблон в строке найден, и false, если не найден.


//Флаги  // Flags
//Флаги в compile() методе изменяют способ выполнения поиска. Вот несколько из них:
//
// - Pattern.CASE_INSENSITIVE- Регистр букв будет игнорироваться при выполнении поиска.
// - Pattern.LITERAL- Специальные символы в шаблоне не будут иметь особого значения и будут рассматриваться как обычные символы при выполнении поиска.
// - Pattern.UNICODE_CASE- Используйте его вместе с CASE_INSENSITIVEфлагом, чтобы также игнорировать регистр букв вне английского алфавита.

//Шаблоны регулярных выражений // Regular Expression Patterns
//Первым параметром Pattern.compile()метода является шаблон. Он описывает то, что ищется.
//Скобки используются для поиска диапазона символов:
//Expression	Description // Выражение Описание
//[abc]	Find one character from the options between the brackets // Найдите один символ из вариантов в скобках
//[^abc]	Find one character NOT between the brackets // Найти один символ НЕ в скобках
//[0-9]	Find one character from the range 0 to 9 // Найти один символ в диапазоне от 0 до 9

//Метасимволы // Metacharacters
//Метасимволы — это символы со специальным значением:(найти табл с помощью Googl)

//квантификаторы // Quantifiers
//Квантификаторы определяют количества:(найти табл с помощью Googl)
